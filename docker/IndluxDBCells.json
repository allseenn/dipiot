[{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"great-margulis-433001"},"spec":{"charts":[{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"co2_equivalent","note":"hello","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"co2_equivalent\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"iaq","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"iaq\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"yPos":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"iaq_accuracy","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"iaq_accuracy\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"yPos":6},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"bsec_status","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"bsec_status\" )\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"static_iaq","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"static_iaq\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":3,"yPos":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"raw_temperature","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"raw_temperature\" or r[\"topic\"] == \"static_iaq\" or r[\"topic\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":3,"yPos":6},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"pressure","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"pressure\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":6},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"breath_voc_equivalent","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"breath_voc_equivalent\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":6,"yPos":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"temperature","queries":[{"query":"from(bucket: \"IoT\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"topic\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":6,"yPos":6},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"humidity","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"humidity\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":9},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"raw_humidity","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"raw_humidity\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":9,"yPos":3},{"colors":[{"id":"0","name":"laser","type":"min","hex":"#00C9FF"},{"id":"1","name":"comet","type":"max","hex":"#9394FF","value":100}],"decimalPlaces":2,"height":3,"kind":"Gauge","name":"gas","queries":[{"query":"from(bucket: \"IoT\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"topic\"] == \"gas\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cd8fb61b1115\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")"}],"staticLegend":{},"width":3,"xPos":9,"yPos":6}],"name":"bme680"}}]